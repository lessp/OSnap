"use strict";(self.webpackChunko_snap=self.webpackChunko_snap||[]).push([[994],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return f}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),s=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(u.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,u=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=s(n),f=a,c=d["".concat(u,".").concat(f)]||d[f]||m[f]||l;return n?r.createElement(c,i(i({ref:t},p),{},{components:n})):r.createElement(c,i({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,i=new Array(l);i[0]=d;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var s=2;s<l;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8215:function(e,t,n){var r=n(7294);t.Z=function(e){var t=e.children,n=e.hidden,a=e.className;return r.createElement("div",{role:"tabpanel",hidden:n,className:a},t)}},5064:function(e,t,n){n.d(t,{Z:function(){return s}});var r=n(7294),a=n(9443);var l=function(){var e=(0,r.useContext)(a.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},i=n(6010),o="tabItem_1uMI",u="tabItemActive_2DSg";var s=function(e){var t,n=e.lazy,a=e.block,s=e.defaultValue,p=e.values,m=e.groupId,d=e.className,f=r.Children.toArray(e.children),c=null!=p?p:f.map((function(e){return{value:e.props.value,label:e.props.label}})),k=null!=s?s:null==(t=f.find((function(e){return e.props.default})))?void 0:t.props.value,h=l(),g=h.tabGroupChoices,N=h.setTabGroupChoices,y=(0,r.useState)(k),b=y[0],v=y[1],C=[];if(null!=m){var w=g[m];null!=w&&w!==b&&c.some((function(e){return e.value===w}))&&v(w)}var x=function(e){var t=e.currentTarget,n=C.indexOf(t),r=c[n].value;v(r),null!=m&&(N(m,r),setTimeout((function(){var e,n,r,a,l,i,o,s;(e=t.getBoundingClientRect(),n=e.top,r=e.left,a=e.bottom,l=e.right,i=window,o=i.innerHeight,s=i.innerWidth,n>=0&&l<=s&&a<=o&&r>=0)||(t.scrollIntoView({block:"center",behavior:"smooth"}),t.classList.add(u),setTimeout((function(){return t.classList.remove(u)}),2e3))}),150))},T=function(e){var t,n=null;switch(e.key){case"ArrowRight":var r=C.indexOf(e.target)+1;n=C[r]||C[0];break;case"ArrowLeft":var a=C.indexOf(e.target)-1;n=C[a]||C[C.length-1]}null==(t=n)||t.focus()};return r.createElement("div",{className:"tabs-container"},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":a},d)},c.map((function(e){var t=e.value,n=e.label;return r.createElement("li",{role:"tab",tabIndex:b===t?0:-1,"aria-selected":b===t,className:(0,i.Z)("tabs__item",o,{"tabs__item--active":b===t}),key:t,ref:function(e){return C.push(e)},onKeyDown:T,onFocus:x,onClick:x},null!=n?n:t)}))),n?(0,r.cloneElement)(f.filter((function(e){return e.props.value===b}))[0],{className:"margin-vert--md"}):r.createElement("div",{className:"margin-vert--md"},f.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==b})}))))}},9443:function(e,t,n){var r=(0,n(7294).createContext)(void 0);t.Z=r},8773:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return p},metadata:function(){return m},toc:function(){return d},default:function(){return c}});var r=n(7462),a=n(3366),l=(n(7294),n(3905)),i=n(5064),o=n(8215),u=["components"],s={id:"configuration",title:"Configuration",sidebar_position:3},p="Configuration",m={unversionedId:"Setup/configuration",id:"Setup/configuration",isDocsHomePage:!1,title:"Configuration",description:"Before you can run your first test suite, OSnap needs to be configured.",source:"@site/docs/Setup/configuration.md",sourceDirName:"Setup",slug:"/Setup/configuration",permalink:"/OSnap/Setup/configuration",tags:[],version:"current",sidebarPosition:3,frontMatter:{id:"configuration",title:"Configuration",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Using Docker",permalink:"/OSnap/Setup/using-docker"},next:{title:"Configuration",permalink:"/OSnap/Tests/configuration"}},d=[{value:"Options",id:"options",children:[{value:"Base Url",id:"base-url",children:[]},{value:"Default Sizes",id:"default-sizes",children:[]},{value:"Snapshot Directory",id:"snapshot-directory",children:[]},{value:"Fullscreen",id:"fullscreen",children:[]},{value:"Threshold",id:"threshold",children:[]},{value:"Parallelism",id:"parallelism",children:[]},{value:"Test Pattern",id:"test-pattern",children:[]},{value:"Ignore Patterns",id:"ignore-patterns",children:[]},{value:"Diff-Pixel Color",id:"diff-pixel-color",children:[]}]},{value:"Example",id:"example",children:[]}],f={toc:d};function c(e){var t=e.components,n=(0,a.Z)(e,u);return(0,l.kt)("wrapper",(0,r.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"configuration"},"Configuration"),(0,l.kt)("p",null,"Before you can run your first test suite, OSnap needs to be configured. ",(0,l.kt)("br",null),"\nTo do this, you need two files. The global config file and at least one test file."),(0,l.kt)("p",null,"All configuration files may be written in either ",(0,l.kt)("inlineCode",{parentName:"p"},"JSON")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"YAML")," format."),(0,l.kt)("p",null,"The global config file has to be named ",(0,l.kt)("inlineCode",{parentName:"p"},"osnap.config.json")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"osnap.config.yaml")," and lives in the root folder of your project.\nIf you want to have the config file in a different location, you may specify the ",(0,l.kt)("inlineCode",{parentName:"p"},"--config")," flag as an ",(0,l.kt)("a",{parentName:"p",href:"cli"},"cli option"),"."),(0,l.kt)("h2",{id:"options"},"Options"),(0,l.kt)("h3",{id:"base-url"},"Base Url"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Key"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"baseUrl")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Required"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"true")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Type"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"))),(0,l.kt)("p",null,"The base url used for all of your tests. This gets prepended to all your test urls."),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"default-sizes"},"Default Sizes"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Key"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"defaultSizes")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Required"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"true")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Type"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"Array<{name: string?, width: int, height: int}>"))),(0,l.kt)("p",null,"An array of default sizes to run your tests in. If fullScreen is set to true, the height is the minimum height of the snapshot."),(0,l.kt)("p",null,"You may specify an optional ",(0,l.kt)("inlineCode",{parentName:"p"},"name")," for each size. This is useful for running actions or ignore regions only on some screen sizes."),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"snapshot-directory"},"Snapshot Directory"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Key"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"snapshotDirectory")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Required"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"false")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Type"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Default"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"./__snapshots__"))),(0,l.kt)("p",null,"The relative path to a folder, where OSnap will save the base images and test results in. ",(0,l.kt)("br",null),"\nThis path is relative to the global config file."),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"fullscreen"},"Fullscreen"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Key"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"fullScreen")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Required"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"false")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Type"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"boolean (true / false)")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Default"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"true"))),(0,l.kt)("p",null,"Set this to ",(0,l.kt)("inlineCode",{parentName:"p"},"true")," if you want to capture a screenshot of the whole page. ",(0,l.kt)("br",null),"\nIf it is set to ",(0,l.kt)("inlineCode",{parentName:"p"},"false"),", only the visible part of the viewport is captured."),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"threshold"},"Threshold"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Key"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"threshold")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Required"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"false")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Type"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"int")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Default"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"0"))),(0,l.kt)("p",null,"The number of pixels allowed to be different, before the test will be marked as failed."),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"parallelism"},"Parallelism"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Key"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"parallelism")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Required"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"false")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Type"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"int")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Default"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"3"))),(0,l.kt)("p",null,"The number of workers OSnap should spawn to run your tests."),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"test-pattern"},"Test Pattern"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Key"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"testPattern")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Required"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"false")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Type"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Default"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"**/*.osnap.json"))),(0,l.kt)("p",null,"A glob pattern used to locate the test files to run.\nIf you want to use ",(0,l.kt)("inlineCode",{parentName:"p"},"YAML")," as your test format, you have to change this."),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"ignore-patterns"},"Ignore Patterns"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Key"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"ignorePatterns")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Required"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"false")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Type"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"Array<string>")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Default"),": ",(0,l.kt)("inlineCode",{parentName:"li"},'["**/node_modules/**"]'))),(0,l.kt)("p",null,"An array of glob patterns to not search for test files in."),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"diff-pixel-color"},"Diff-Pixel Color"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Key"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"diffPixelColor")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Required"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"false")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Type"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"{r: int, g: int, b: int}")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Default"),": ",(0,l.kt)("inlineCode",{parentName:"li"},'{"r": 255, "g": 0, "b": 0}'))),(0,l.kt)("p",null,"The color in rgb format used to highlight different pixels in the diff image. ",(0,l.kt)("br",null),"\nOnly values between 0 and 255 are allowed. The default color is red."),(0,l.kt)("h2",{id:"example"},"Example"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"A full example of a global config file:")),(0,l.kt)(i.Z,{mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"yaml",label:"YAML",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'baseUrl: "http://localhost:3000"\nfullScreen: true\nthreshold: 10\nparallelism: 20\n\nsnapshotDirectory: "./__image-snapshots__"\ntestPattern: "src/**/*.osnap.yaml"\nignorePatterns:\n  - node_modules\n  - vendor\n  - dist\n\ndiffPixelColor:\n  r: 209\n  g: 63\n  b: 255\n\ndefaultSizes:\n  - name: xxl\n    width: 1600\n    height: 900\n  - name: xl\n    width: 1366\n    height: 768\n  - name: md\n    width: 1024\n    height: 576\n  - name: sm\n    width: 768\n    height: 432\n  - name: xs\n    width: 640\n    height: 360\n  - name: xxs\n    width: 320\n    height: 180\n'))),(0,l.kt)(o.Z,{value:"json",label:"JSON",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "baseUrl": "http://localhost:3000",\n  "fullScreen": true,\n  "threshold": 10,\n  "parallelism": 20,\n  "snapshotDirectory": "./__image-snapshots__",\n  "testPattern": "src/**/*.osnap.json",\n  "ignorePatterns": ["node_modules", "vendor", "dist"],\n  "diffPixelColor": {\n    "r": 209,\n    "g": 63,\n    "b": 255\n  },\n  "defaultSizes": [\n    { "name": "xxl", "width": 1600, "height": 900 },\n    { "name": "xl", "width": 1366, "height": 768 },\n    { "name": "md", "width": 1024, "height": 576 },\n    { "name": "sm", "width": 768, "height": 432 },\n    { "name": "xs", "width": 640, "height": 360 },\n    { "name": "xxs", "width": 320, "height": 180 }\n  ]\n}\n')))))}c.isMDXComponent=!0},6010:function(e,t,n){function r(e){var t,n,a="";if("string"==typeof e||"number"==typeof e)a+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=r(e[t]))&&(a&&(a+=" "),a+=n);else for(t in e)e[t]&&(a&&(a+=" "),a+=t);return a}function a(){for(var e,t,n=0,a="";n<arguments.length;)(e=arguments[n++])&&(t=r(e))&&(a&&(a+=" "),a+=t);return a}n.d(t,{Z:function(){return a}})}}]);